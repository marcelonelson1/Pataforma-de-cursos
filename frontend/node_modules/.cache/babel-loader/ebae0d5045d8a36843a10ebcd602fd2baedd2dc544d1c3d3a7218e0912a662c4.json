{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    isLoggedIn: false,\n    loading: true,\n    user: null,\n    cursosComprados: []\n  });\n\n  // Validación mejorada compatible con tu backend Go\n  const validateToken = token => {\n    try {\n      if (typeof token !== 'string' || token.trim() === '') return false;\n\n      // Verificación básica de estructura JWT\n      const parts = token.split('.');\n      if (parts.length !== 3) return false;\n\n      // Verificar decodificación\n      const decoded = jwtDecode(token);\n      return decoded && typeof decoded.user_id !== 'undefined' && typeof decoded.role !== 'undefined' && ['admin', 'profesor', 'estudiante', 'usuario'].includes(decoded.role);\n    } catch {\n      return false;\n    }\n  };\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setAuthState(prev => ({\n      ...prev,\n      isLoggedIn: false,\n      user: null,\n      cursosComprados: [],\n      loading: false\n    }));\n  }, []);\n  const fetchUserData = useCallback(async token => {\n    try {\n      const [userResponse, cursosResponse] = await Promise.all([fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }), fetch('/api/pagos/mis-cursos', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).catch(() => null) // Tolerancia a fallos en esta petición\n      ]);\n      if (!userResponse.ok) {\n        throw new Error(userResponse.status === 401 ? 'Sesión expirada' : 'Error al obtener datos');\n      }\n      const userData = await userResponse.json();\n      const cursosData = cursosResponse !== null && cursosResponse !== void 0 && cursosResponse.ok ? await cursosResponse.json() : [];\n      return {\n        user: {\n          id: userData.id,\n          email: userData.email,\n          nombre: userData.nombre,\n          role: userData.role\n        },\n        cursos: userData.role === 'estudiante' ? cursosData : []\n      };\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      throw error;\n    }\n  }, []);\n  const login = useCallback(async token => {\n    try {\n      // Verificación inicial del token\n      if (!token || typeof token !== 'string') {\n        throw new Error('No se recibió un token válido');\n      }\n\n      // Decodificación para verificar estructura\n      let decoded;\n      try {\n        decoded = jwtDecode(token);\n        if (!decoded.user_id || !decoded.role) {\n          throw new Error('Token no contiene los campos requeridos');\n        }\n      } catch (decodeError) {\n        throw new Error(`Token malformado: ${decodeError.message}`);\n      }\n\n      // Obtener datos del usuario\n      const {\n        user,\n        cursos\n      } = await fetchUserData(token);\n\n      // Actualizar estado\n      localStorage.setItem('token', token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n      return user;\n    } catch (error) {\n      console.error('Login error:', error);\n      logout();\n      throw error;\n    }\n  }, [fetchUserData, logout]);\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      setAuthState(prev => ({\n        ...prev,\n        loading: true\n      }));\n      const token = localStorage.getItem('token');\n      if (!validateToken(token)) {\n        logout();\n        return;\n      }\n      const {\n        user,\n        cursos\n      } = await fetchUserData(token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    }\n  }, [fetchUserData, logout]);\n  const verifyCourseAccess = useCallback(async cursoId => {\n    if (!authState.isLoggedIn) {\n      return {\n        access: false,\n        message: 'Debes iniciar sesión'\n      };\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.status === 401) {\n        logout();\n        return {\n          access: false,\n          message: 'Sesión expirada'\n        };\n      }\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        return {\n          access: false,\n          message: errorData.error || 'Error al verificar acceso'\n        };\n      }\n      const data = await response.json();\n      return {\n        access: data.tiene_acceso,\n        message: ''\n      };\n    } catch (error) {\n      console.error('Access verification error:', error);\n      return {\n        access: false,\n        message: 'Error de conexión'\n      };\n    }\n  }, [authState.isLoggedIn, logout]);\n  const processPayment = useCallback(async cursoId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/payments/create-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          curso_id: cursoId\n        })\n      });\n      const data = await response.json();\n      if (response.status === 401) {\n        logout();\n        throw new Error('Sesión expirada');\n      }\n      if (!response.ok) {\n        throw new Error(data.error || 'Error al procesar pago');\n      }\n\n      // Actualizar token si viene en la respuesta\n      if (data.token) {\n        await login(data.token);\n      } else {\n        await checkAuthStatus();\n      }\n      return data;\n    } catch (error) {\n      console.error('Payment error:', error);\n      throw error;\n    }\n  }, [checkAuthStatus, login, logout]);\n\n  // Efecto para verificación inicial y periódica\n  useEffect(() => {\n    checkAuthStatus();\n    const interval = setInterval(() => {\n      if (authState.isLoggedIn) checkAuthStatus();\n    }, 5 * 60 * 1000); // 5 minutos\n\n    return () => clearInterval(interval);\n  }, [authState.isLoggedIn, checkAuthStatus]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...authState,\n      login,\n      logout,\n      verifyCourseAccess,\n      processPayment,\n      checkAuthStatus\n    },\n    children: !authState.loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"1VJDjnCUWsP8Ia68CqYZT0hsyAg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","isLoggedIn","loading","user","cursosComprados","validateToken","token","trim","parts","split","length","decoded","user_id","role","includes","logout","localStorage","removeItem","prev","fetchUserData","userResponse","cursosResponse","Promise","all","fetch","headers","catch","ok","Error","status","userData","json","cursosData","id","email","nombre","cursos","error","console","login","decodeError","message","setItem","checkAuthStatus","getItem","verifyCourseAccess","cursoId","access","response","errorData","data","tiene_acceso","processPayment","method","body","JSON","stringify","curso_id","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: false,\n    loading: true,\n    user: null,\n    cursosComprados: []\n  });\n\n  // Validación mejorada compatible con tu backend Go\n  const validateToken = (token) => {\n    try {\n      if (typeof token !== 'string' || token.trim() === '') return false;\n      \n      // Verificación básica de estructura JWT\n      const parts = token.split('.');\n      if (parts.length !== 3) return false;\n\n      // Verificar decodificación\n      const decoded = jwtDecode(token);\n      return (\n        decoded && \n        typeof decoded.user_id !== 'undefined' && \n        typeof decoded.role !== 'undefined' &&\n        ['admin', 'profesor', 'estudiante', 'usuario'].includes(decoded.role)\n      );\n    } catch {\n      return false;\n    }\n  };\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setAuthState(prev => ({\n      ...prev,\n      isLoggedIn: false,\n      user: null,\n      cursosComprados: [],\n      loading: false\n    }));\n  }, []);\n\n  const fetchUserData = useCallback(async (token) => {\n    try {\n      const [userResponse, cursosResponse] = await Promise.all([\n        fetch('/api/auth/me', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        }),\n        fetch('/api/pagos/mis-cursos', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        }).catch(() => null) // Tolerancia a fallos en esta petición\n      ]);\n\n      if (!userResponse.ok) {\n        throw new Error(userResponse.status === 401 ? 'Sesión expirada' : 'Error al obtener datos');\n      }\n\n      const userData = await userResponse.json();\n      const cursosData = cursosResponse?.ok ? await cursosResponse.json() : [];\n\n      return {\n        user: {\n          id: userData.id,\n          email: userData.email,\n          nombre: userData.nombre,\n          role: userData.role\n        },\n        cursos: userData.role === 'estudiante' ? cursosData : []\n      };\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      throw error;\n    }\n  }, []);\n\n  const login = useCallback(async (token) => {\n    try {\n      // Verificación inicial del token\n      if (!token || typeof token !== 'string') {\n        throw new Error('No se recibió un token válido');\n      }\n\n      // Decodificación para verificar estructura\n      let decoded;\n      try {\n        decoded = jwtDecode(token);\n        if (!decoded.user_id || !decoded.role) {\n          throw new Error('Token no contiene los campos requeridos');\n        }\n      } catch (decodeError) {\n        throw new Error(`Token malformado: ${decodeError.message}`);\n      }\n\n      // Obtener datos del usuario\n      const { user, cursos } = await fetchUserData(token);\n      \n      // Actualizar estado\n      localStorage.setItem('token', token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n\n      return user;\n    } catch (error) {\n      console.error('Login error:', error);\n      logout();\n      throw error;\n    }\n  }, [fetchUserData, logout]);\n\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      setAuthState(prev => ({ ...prev, loading: true }));\n      \n      const token = localStorage.getItem('token');\n      if (!validateToken(token)) {\n        logout();\n        return;\n      }\n\n      const { user, cursos } = await fetchUserData(token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    }\n  }, [fetchUserData, logout]);\n\n  const verifyCourseAccess = useCallback(async (cursoId) => {\n    if (!authState.isLoggedIn) {\n      return { access: false, message: 'Debes iniciar sesión' };\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n\n      if (response.status === 401) {\n        logout();\n        return { access: false, message: 'Sesión expirada' };\n      }\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        return { access: false, message: errorData.error || 'Error al verificar acceso' };\n      }\n\n      const data = await response.json();\n      return { access: data.tiene_acceso, message: '' };\n    } catch (error) {\n      console.error('Access verification error:', error);\n      return { access: false, message: 'Error de conexión' };\n    }\n  }, [authState.isLoggedIn, logout]);\n\n  const processPayment = useCallback(async (cursoId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/payments/create-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ curso_id: cursoId })\n      });\n\n      const data = await response.json();\n\n      if (response.status === 401) {\n        logout();\n        throw new Error('Sesión expirada');\n      }\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Error al procesar pago');\n      }\n\n      // Actualizar token si viene en la respuesta\n      if (data.token) {\n        await login(data.token);\n      } else {\n        await checkAuthStatus();\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Payment error:', error);\n      throw error;\n    }\n  }, [checkAuthStatus, login, logout]);\n\n  // Efecto para verificación inicial y periódica\n  useEffect(() => {\n    checkAuthStatus();\n\n    const interval = setInterval(() => {\n      if (authState.isLoggedIn) checkAuthStatus();\n    }, 5 * 60 * 1000); // 5 minutos\n\n    return () => clearInterval(interval);\n  }, [authState.isLoggedIn, checkAuthStatus]);\n\n  return (\n    <AuthContext.Provider value={{\n      ...authState,\n      login,\n      logout,\n      verifyCourseAccess,\n      processPayment,\n      checkAuthStatus\n    }}>\n      {!authState.loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}