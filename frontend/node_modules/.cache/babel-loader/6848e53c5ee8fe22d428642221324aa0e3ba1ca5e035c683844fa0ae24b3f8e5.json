{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js (antes VideoPlayer.js)\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// Crear el contexto de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// URL base de la API\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Función para manejar errores de manera consistente\nconst handleApiError = error => {\n  if (error.response) {\n    return error.response.data.error || 'Error desconocido';\n  }\n  return error.message || 'Error de conexión';\n};\n\n// Proveedor del contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Función para verificar el estado de autenticación\n  const checkAuthStatus = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setIsLoggedIn(false);\n      setUser(null);\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_URL}/auth/me`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setUser(response.data.data);\n      setIsLoggedIn(true);\n      setError(null);\n    } catch (err) {\n      // Token inválido o expirado\n      localStorage.removeItem('token');\n      setIsLoggedIn(false);\n      setUser(null);\n      setError(handleApiError(err));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para iniciar sesión\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsLoggedIn(true);\n      setError(null);\n\n      // Evento para sincronización entre pestañas\n      window.dispatchEvent(new Event('loginSuccess'));\n      return user;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para registrarse\n  const register = async (nombre, email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/register`, {\n        nombre,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsLoggedIn(true);\n      setError(null);\n\n      // Evento para sincronización entre pestañas\n      window.dispatchEvent(new Event('loginSuccess'));\n      return user;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = async () => {\n    try {\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsLoggedIn(false);\n      setError(null);\n\n      // Evento para sincronización entre pestañas\n      window.dispatchEvent(new Event('logoutSuccess'));\n    } catch (err) {\n      setError(handleApiError(err));\n    }\n  };\n\n  // Función para recuperar contraseña\n  const forgotPassword = async email => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/forgot-password`, {\n        email\n      });\n      return response.data;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para resetear contraseña\n  const resetPassword = async (token, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/reset-password`, {\n        token,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Configurar axios para usar token en todas las solicitudes\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = token;\n    }\n  }, [isLoggedIn]);\n\n  // Configurar evento de escucha para sincronización entre pestañas\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === 'token') {\n        checkAuthStatus();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('loginSuccess', checkAuthStatus);\n    window.addEventListener('logoutSuccess', checkAuthStatus);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('loginSuccess', checkAuthStatus);\n      window.removeEventListener('logoutSuccess', checkAuthStatus);\n    };\n  }, []);\n\n  // Efecto inicial para verificar estado de autenticación\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Valores del contexto\n  const contextValue = {\n    isLoggedIn,\n    loading,\n    user,\n    error,\n    login,\n    logout,\n    register,\n    forgotPassword,\n    resetPassword,\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar el contexto de autenticación\n_s(AuthProvider, \"gretKAsGzPNgrVvePEIw1tiIkGI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Configuración global de axios para manejar errores de autorización\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Token inválido, forzar logout\n    localStorage.removeItem('token');\n    window.dispatchEvent(new Event('logoutSuccess'));\n  }\n  return Promise.reject(error);\n});\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","API_URL","process","env","REACT_APP_API_URL","handleApiError","error","response","data","message","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","loading","setLoading","user","setUser","setError","checkAuthStatus","token","localStorage","getItem","get","headers","Authorization","err","removeItem","login","email","password","post","setItem","window","dispatchEvent","Event","register","nombre","logout","forgotPassword","resetPassword","defaults","common","handleStorageChange","e","key","addEventListener","removeEventListener","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","interceptors","use","status","Promise","reject","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js (antes VideoPlayer.js)\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// Crear el contexto de autenticación\nconst AuthContext = createContext(null);\n\n// URL base de la API\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Función para manejar errores de manera consistente\nconst handleApiError = (error) => {\n  if (error.response) {\n    return error.response.data.error || 'Error desconocido';\n  }\n  return error.message || 'Error de conexión';\n};\n\n// Proveedor del contexto\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Función para verificar el estado de autenticación\n  const checkAuthStatus = async () => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      setIsLoggedIn(false);\n      setUser(null);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_URL}/auth/me`, {\n        headers: { Authorization: token }\n      });\n      \n      setUser(response.data.data);\n      setIsLoggedIn(true);\n      setError(null);\n    } catch (err) {\n      // Token inválido o expirado\n      localStorage.removeItem('token');\n      setIsLoggedIn(false);\n      setUser(null);\n      setError(handleApiError(err));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para iniciar sesión\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n      \n      const { token, user } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsLoggedIn(true);\n      setError(null);\n      \n      // Evento para sincronización entre pestañas\n      window.dispatchEvent(new Event('loginSuccess'));\n      \n      return user;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para registrarse\n  const register = async (nombre, email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/register`, { \n        nombre, \n        email, \n        password \n      });\n      \n      const { token, user } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsLoggedIn(true);\n      setError(null);\n      \n      // Evento para sincronización entre pestañas\n      window.dispatchEvent(new Event('loginSuccess'));\n      \n      return user;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = async () => {\n    try {\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsLoggedIn(false);\n      setError(null);\n      \n      // Evento para sincronización entre pestañas\n      window.dispatchEvent(new Event('logoutSuccess'));\n    } catch (err) {\n      setError(handleApiError(err));\n    }\n  };\n\n  // Función para recuperar contraseña\n  const forgotPassword = async (email) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/forgot-password`, { email });\n      return response.data;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para resetear contraseña\n  const resetPassword = async (token, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/auth/reset-password`, { \n        token, \n        password \n      });\n      return response.data;\n    } catch (err) {\n      setError(handleApiError(err));\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Configurar axios para usar token en todas las solicitudes\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = token;\n    }\n  }, [isLoggedIn]);\n\n  // Configurar evento de escucha para sincronización entre pestañas\n  useEffect(() => {\n    const handleStorageChange = (e) => {\n      if (e.key === 'token') {\n        checkAuthStatus();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('loginSuccess', checkAuthStatus);\n    window.addEventListener('logoutSuccess', checkAuthStatus);\n    \n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('loginSuccess', checkAuthStatus);\n      window.removeEventListener('logoutSuccess', checkAuthStatus);\n    };\n  }, []);\n\n  // Efecto inicial para verificar estado de autenticación\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Valores del contexto\n  const contextValue = {\n    isLoggedIn,\n    loading,\n    user,\n    error,\n    login,\n    logout,\n    register,\n    forgotPassword,\n    resetPassword,\n    setError\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personalizado para usar el contexto de autenticación\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Configuración global de axios para manejar errores de autorización\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      // Token inválido, forzar logout\n      localStorage.removeItem('token');\n      window.dispatchEvent(new Event('logoutSuccess'));\n    }\n    return Promise.reject(error);\n  }\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}