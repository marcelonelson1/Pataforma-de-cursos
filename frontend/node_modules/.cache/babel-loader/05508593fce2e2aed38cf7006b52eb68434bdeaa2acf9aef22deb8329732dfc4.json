{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    isLoggedIn: false,\n    loading: true,\n    user: null,\n    cursosComprados: []\n  });\n\n  // Validación mejorada compatible con tu backend\n  const validateTokenStructure = token => {\n    return typeof token === 'string' && token.split('.').length === 3 && /^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$/.test(token);\n  };\n  const isTokenValid = useCallback(token => {\n    if (!validateTokenStructure(token)) return false;\n    try {\n      const {\n        exp,\n        user_id,\n        role\n      } = jwtDecode(token);\n      return typeof user_id === 'number' && ['admin', 'profesor', 'estudiante', 'usuario'].includes(role) && exp * 1000 > Date.now();\n    } catch {\n      return false;\n    }\n  }, []);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setAuthState({\n      isLoggedIn: false,\n      loading: false,\n      user: null,\n      cursosComprados: []\n    });\n  }, []);\n  const fetchUserAndCourses = useCallback(async token => {\n    try {\n      const [userRes, cursosRes] = await Promise.all([fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }), fetch('/api/pagos/mis-cursos', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).catch(() => null) // Tolerancia a fallos\n      ]);\n      if (!userRes.ok) throw new Error(userRes.status === 401 ? 'Sesión expirada' : 'Error del servidor');\n      const userData = await userRes.json();\n      const cursosData = cursosRes !== null && cursosRes !== void 0 && cursosRes.ok ? await cursosRes.json() : [];\n      return {\n        user: {\n          id: userData.id,\n          email: userData.email,\n          nombre: userData.nombre,\n          role: userData.role\n        },\n        cursos: userData.role === 'estudiante' ? cursosData : []\n      };\n    } catch (error) {\n      console.error('Fetch error:', error);\n      throw error;\n    }\n  }, []);\n  const login = useCallback(async token => {\n    if (!validateTokenStructure(token)) {\n      throw new Error('El token no tiene el formato JWT válido');\n    }\n    try {\n      const {\n        user,\n        cursos\n      } = await fetchUserAndCourses(token);\n      localStorage.setItem('token', token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n      return user;\n    } catch (error) {\n      logout();\n      throw error;\n    }\n  }, [fetchUserAndCourses, logout]);\n  const checkAuthState = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const isValid = isTokenValid(token);\n      if (!isValid) {\n        logout();\n        return;\n      }\n      const {\n        user,\n        cursos\n      } = await fetchUserAndCourses(token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n    } catch (error) {\n      logout();\n    }\n  }, [isTokenValid, fetchUserAndCourses, logout]);\n  const verifyCourseAccess = useCallback(async cursoId => {\n    if (!authState.isLoggedIn) {\n      return {\n        access: false,\n        message: 'Debes iniciar sesión'\n      };\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.status === 401) {\n        logout();\n        return {\n          access: false,\n          message: 'Sesión expirada'\n        };\n      }\n      if (!response.ok) {\n        const error = await response.json().catch(() => ({}));\n        return {\n          access: false,\n          message: error.error || 'Error al verificar acceso'\n        };\n      }\n      const data = await response.json();\n      return {\n        access: data.tiene_acceso,\n        message: ''\n      };\n    } catch (error) {\n      return {\n        access: false,\n        message: 'Error de conexión'\n      };\n    }\n  }, [authState.isLoggedIn, logout]);\n  const processPayment = useCallback(async cursoId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/payments/create-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          curso_id: cursoId\n        })\n      });\n      const data = await response.json();\n      if (response.status === 401) {\n        logout();\n        throw new Error('Sesión expirada');\n      }\n      if (!response.ok) {\n        throw new Error(data.error || 'Error al procesar pago');\n      }\n      if (data.token) {\n        await login(data.token);\n      } else {\n        await checkAuthState();\n      }\n      return data;\n    } catch (error) {\n      console.error('Payment error:', error);\n      throw error;\n    }\n  }, [checkAuthState, login, logout]);\n\n  // Efectos de sincronización\n  useEffect(() => {\n    checkAuthState();\n    const interval = setInterval(() => {\n      if (authState.isLoggedIn) checkAuthState();\n    }, 5 * 60 * 1000); // 5 minutos\n\n    return () => clearInterval(interval);\n  }, [authState.isLoggedIn, checkAuthState]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...authState,\n      login,\n      logout,\n      verifyCourseAccess,\n      processPayment,\n      checkAuthState\n    },\n    children: !authState.loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"9eUT1S8j8OByu7wPYl9rPqPCqsw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth debe usarse dentro de AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","isLoggedIn","loading","user","cursosComprados","validateTokenStructure","token","split","length","test","isTokenValid","exp","user_id","role","includes","Date","now","logout","localStorage","removeItem","fetchUserAndCourses","userRes","cursosRes","Promise","all","fetch","headers","catch","ok","Error","status","userData","json","cursosData","id","email","nombre","cursos","error","console","login","setItem","checkAuthState","getItem","isValid","verifyCourseAccess","cursoId","access","message","response","data","tiene_acceso","processPayment","method","body","JSON","stringify","curso_id","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: false,\n    loading: true,\n    user: null,\n    cursosComprados: []\n  });\n\n  // Validación mejorada compatible con tu backend\n  const validateTokenStructure = (token) => {\n    return typeof token === 'string' && \n           token.split('.').length === 3 &&\n           /^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$/.test(token);\n  };\n\n  const isTokenValid = useCallback((token) => {\n    if (!validateTokenStructure(token)) return false;\n    \n    try {\n      const { exp, user_id, role } = jwtDecode(token);\n      return (\n        typeof user_id === 'number' && \n        ['admin', 'profesor', 'estudiante', 'usuario'].includes(role) &&\n        exp * 1000 > Date.now()\n      );\n    } catch {\n      return false;\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setAuthState({\n      isLoggedIn: false,\n      loading: false,\n      user: null,\n      cursosComprados: []\n    });\n  }, []);\n\n  const fetchUserAndCourses = useCallback(async (token) => {\n    try {\n      const [userRes, cursosRes] = await Promise.all([\n        fetch('/api/auth/me', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        }),\n        fetch('/api/pagos/mis-cursos', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        }).catch(() => null) // Tolerancia a fallos\n      ]);\n\n      if (!userRes.ok) throw new Error(userRes.status === 401 ? 'Sesión expirada' : 'Error del servidor');\n\n      const userData = await userRes.json();\n      const cursosData = cursosRes?.ok ? await cursosRes.json() : [];\n\n      return {\n        user: {\n          id: userData.id,\n          email: userData.email,\n          nombre: userData.nombre,\n          role: userData.role\n        },\n        cursos: userData.role === 'estudiante' ? cursosData : []\n      };\n    } catch (error) {\n      console.error('Fetch error:', error);\n      throw error;\n    }\n  }, []);\n\n  const login = useCallback(async (token) => {\n    if (!validateTokenStructure(token)) {\n      throw new Error('El token no tiene el formato JWT válido');\n    }\n\n    try {\n      const { user, cursos } = await fetchUserAndCourses(token);\n      \n      localStorage.setItem('token', token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n      \n      return user;\n    } catch (error) {\n      logout();\n      throw error;\n    }\n  }, [fetchUserAndCourses, logout]);\n\n  const checkAuthState = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const isValid = isTokenValid(token);\n\n      if (!isValid) {\n        logout();\n        return;\n      }\n\n      const { user, cursos } = await fetchUserAndCourses(token);\n      setAuthState({\n        isLoggedIn: true,\n        loading: false,\n        user,\n        cursosComprados: cursos\n      });\n    } catch (error) {\n      logout();\n    }\n  }, [isTokenValid, fetchUserAndCourses, logout]);\n\n  const verifyCourseAccess = useCallback(async (cursoId) => {\n    if (!authState.isLoggedIn) {\n      return { access: false, message: 'Debes iniciar sesión' };\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n\n      if (response.status === 401) {\n        logout();\n        return { access: false, message: 'Sesión expirada' };\n      }\n\n      if (!response.ok) {\n        const error = await response.json().catch(() => ({}));\n        return { access: false, message: error.error || 'Error al verificar acceso' };\n      }\n\n      const data = await response.json();\n      return { access: data.tiene_acceso, message: '' };\n    } catch (error) {\n      return { access: false, message: 'Error de conexión' };\n    }\n  }, [authState.isLoggedIn, logout]);\n\n  const processPayment = useCallback(async (cursoId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/payments/create-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ curso_id: cursoId })\n      });\n\n      const data = await response.json();\n\n      if (response.status === 401) {\n        logout();\n        throw new Error('Sesión expirada');\n      }\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Error al procesar pago');\n      }\n\n      if (data.token) {\n        await login(data.token);\n      } else {\n        await checkAuthState();\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Payment error:', error);\n      throw error;\n    }\n  }, [checkAuthState, login, logout]);\n\n  // Efectos de sincronización\n  useEffect(() => {\n    checkAuthState();\n    \n    const interval = setInterval(() => {\n      if (authState.isLoggedIn) checkAuthState();\n    }, 5 * 60 * 1000); // 5 minutos\n\n    return () => clearInterval(interval);\n  }, [authState.isLoggedIn, checkAuthState]);\n\n  return (\n    <AuthContext.Provider value={{\n      ...authState,\n      login,\n      logout,\n      verifyCourseAccess,\n      processPayment,\n      checkAuthState\n    }}>\n      {!authState.loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth debe usarse dentro de AuthProvider');\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}