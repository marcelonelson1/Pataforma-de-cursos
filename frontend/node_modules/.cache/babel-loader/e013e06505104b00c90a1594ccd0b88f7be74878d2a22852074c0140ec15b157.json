{"ast":null,"code":"// En RegisterPage.js, actualiza el handleSubmit:\nconst handleSubmit = async e => {\n  e.preventDefault();\n  setLoading(true);\n  setError('');\n\n  // Verificar que las contraseñas coincidan\n  if (formData.password !== formData.confirmPassword) {\n    setError('Las contraseñas no coinciden');\n    setLoading(false);\n    return;\n  }\n  try {\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nombre: formData.nombre,\n        email: formData.email,\n        password: formData.password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      // Aquí es donde capturamos el error si el email ya existe\n      throw new Error(data.error || 'Error al registrarse');\n    }\n\n    // Mostrar mensaje de éxito\n    setError(''); // Limpiar cualquier error previo\n    alert('Registro exitoso. Serás redirigido a la página de inicio de sesión.');\n\n    // Redirigir al usuario a la página de inicio de sesión\n    navigate('/login');\n  } catch (err) {\n    setError(err.message);\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setLoading","setError","formData","password","confirmPassword","response","fetch","method","headers","body","JSON","stringify","nombre","email","data","json","ok","Error","error","alert","navigate","err","message"],"sources":["/home/kali/mi-primer-startup/frontend/src/pages/RegisterPage.js"],"sourcesContent":["// En RegisterPage.js, actualiza el handleSubmit:\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  setLoading(true);\n  setError('');\n  \n  // Verificar que las contraseñas coincidan\n  if (formData.password !== formData.confirmPassword) {\n    setError('Las contraseñas no coinciden');\n    setLoading(false);\n    return;\n  }\n  \n  try {\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nombre: formData.nombre,\n        email: formData.email,\n        password: formData.password\n      })\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      // Aquí es donde capturamos el error si el email ya existe\n      throw new Error(data.error || 'Error al registrarse');\n    }\n    \n    // Mostrar mensaje de éxito\n    setError(''); // Limpiar cualquier error previo\n    alert('Registro exitoso. Serás redirigido a la página de inicio de sesión.');\n    \n    // Redirigir al usuario a la página de inicio de sesión\n    navigate('/login');\n  } catch (err) {\n    setError(err.message);\n  } finally {\n    setLoading(false);\n  }\n};"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,UAAU,CAAC,IAAI,CAAC;EAChBC,QAAQ,CAAC,EAAE,CAAC;;EAEZ;EACA,IAAIC,QAAQ,CAACC,QAAQ,KAAKD,QAAQ,CAACE,eAAe,EAAE;IAClDH,QAAQ,CAAC,8BAA8B,CAAC;IACxCD,UAAU,CAAC,KAAK,CAAC;IACjB;EACF;EAEA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAEV,QAAQ,CAACU,MAAM;QACvBC,KAAK,EAAEX,QAAQ,CAACW,KAAK;QACrBV,QAAQ,EAAED,QAAQ,CAACC;MACrB,CAAC;IACH,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB;MACA,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,sBAAsB,CAAC;IACvD;;IAEA;IACAjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdkB,KAAK,CAAC,qEAAqE,CAAC;;IAE5E;IACAC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,CAAC;EACvB,CAAC,SAAS;IACRtB,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}