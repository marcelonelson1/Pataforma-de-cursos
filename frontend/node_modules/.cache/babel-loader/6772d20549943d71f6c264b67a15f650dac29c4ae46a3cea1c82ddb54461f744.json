{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [cursosComprados, setCursosComprados] = useState([]);\n\n  // Validación robusta del token\n  const validateToken = useCallback(token => {\n    return typeof token === 'string' && token.trim().length > 0;\n  }, []);\n  const isAuthenticated = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!validateToken(token)) {\n      localStorage.removeItem('token');\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(token);\n      const isExpired = decoded.exp * 1000 < Date.now();\n      if (isExpired) localStorage.removeItem('token');\n      return !isExpired;\n    } catch (e) {\n      console.error(\"Error decodificando token:\", e);\n      localStorage.removeItem('token');\n      return false;\n    }\n  }, [validateToken]);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n    setCursosComprados([]);\n  }, []);\n  const fetchUserData = useCallback(async token => {\n    if (!validateToken(token)) {\n      throw new Error('Token de autenticación inválido');\n    }\n    try {\n      const decoded = jwtDecode(token);\n      const userResponse = await fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!userResponse.ok) {\n        throw new Error(userResponse.status === 401 ? 'Sesión expirada' : 'Error al obtener datos del usuario');\n      }\n      const userData = await userResponse.json();\n      const updatedUser = {\n        id: decoded.user_id,\n        email: userData.email,\n        nombre: userData.nombre,\n        role: userData.role\n      };\n      setUser(updatedUser);\n\n      // Solo obtener cursos si es estudiante\n      if (updatedUser.role === 'estudiante') {\n        const cursosResponse = await fetch('/api/pagos/mis-cursos', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (cursosResponse.ok) {\n          setCursosComprados(await cursosResponse.json());\n        }\n      } else {\n        setCursosComprados([]);\n      }\n      return updatedUser;\n    } catch (error) {\n      console.error(\"Error obteniendo datos:\", error);\n      throw error;\n    }\n  }, [validateToken]);\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      setLoading(true);\n      const authenticated = isAuthenticated();\n      setIsLoggedIn(authenticated);\n      if (authenticated) {\n        const token = localStorage.getItem('token');\n        await fetchUserData(token);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error(\"Error verificando autenticación:\", error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, fetchUserData, logout]);\n  const login = useCallback(async token => {\n    if (!validateToken(token)) {\n      throw new Error('El token proporcionado no es válido');\n    }\n    try {\n      localStorage.setItem('token', token);\n      const userData = await fetchUserData(token);\n      setIsLoggedIn(true);\n      return userData;\n    } catch (error) {\n      console.error(\"Error en login:\", error);\n      logout();\n      throw error;\n    }\n  }, [fetchUserData, logout, validateToken]);\n  const verificarAccesoCurso = useCallback(async cursoId => {\n    if (!isLoggedIn) return {\n      tieneAcceso: false,\n      mensaje: 'Debes iniciar sesión'\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!validateToken(token)) {\n        logout();\n        return {\n          tieneAcceso: false,\n          mensaje: 'Sesión inválida'\n        };\n      }\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.status === 401) {\n        logout();\n        return {\n          tieneAcceso: false,\n          mensaje: 'Sesión expirada'\n        };\n      }\n      if (!response.ok) {\n        return {\n          tieneAcceso: false,\n          mensaje: (await response.json()).error || 'Error al verificar acceso'\n        };\n      }\n      return {\n        tieneAcceso: (await response.json()).tiene_acceso,\n        mensaje: ''\n      };\n    } catch (error) {\n      console.error(\"Error verificando acceso:\", error);\n      return {\n        tieneAcceso: false,\n        mensaje: 'Error de conexión'\n      };\n    }\n  }, [isLoggedIn, logout, validateToken]);\n  const procesarPago = useCallback(async cursoId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!validateToken(token)) {\n        logout();\n        throw new Error('Sesión inválida');\n      }\n      const response = await fetch('/api/payments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          curso_id: cursoId\n        })\n      });\n      if (response.status === 401) {\n        logout();\n        throw new Error('Sesión expirada');\n      }\n      if (!response.ok) {\n        throw new Error((await response.json()).error || 'Error al procesar pago');\n      }\n      const data = await response.json();\n      if (data.token) {\n        await login(data.token);\n      } else {\n        await checkAuthStatus();\n      }\n      return data;\n    } catch (error) {\n      console.error(\"Error en pago:\", error);\n      throw error;\n    }\n  }, [checkAuthStatus, login, logout, validateToken]);\n\n  // Efecto para verificación periódica\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isLoggedIn) checkAuthStatus();\n    }, 5 * 60 * 1000); // 5 minutos\n\n    // Verificación inicial\n    checkAuthStatus();\n    return () => clearInterval(interval);\n  }, [checkAuthStatus, isLoggedIn]);\n  const value = {\n    isLoggedIn,\n    loading,\n    user,\n    cursosComprados,\n    login,\n    logout,\n    verificarAccesoCurso,\n    procesarPago,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"IUpemmeizzWMOAwFdBxOxtCddnU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","loading","setLoading","user","setUser","cursosComprados","setCursosComprados","validateToken","token","trim","length","isAuthenticated","localStorage","getItem","removeItem","decoded","isExpired","exp","Date","now","e","console","error","logout","fetchUserData","Error","userResponse","fetch","headers","ok","status","userData","json","updatedUser","id","user_id","email","nombre","role","cursosResponse","checkAuthStatus","authenticated","login","setItem","verificarAccesoCurso","cursoId","tieneAcceso","mensaje","response","tiene_acceso","procesarPago","method","body","JSON","stringify","curso_id","data","interval","setInterval","clearInterval","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [cursosComprados, setCursosComprados] = useState([]);\n\n  // Validación robusta del token\n  const validateToken = useCallback((token) => {\n    return typeof token === 'string' && token.trim().length > 0;\n  }, []);\n\n  const isAuthenticated = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!validateToken(token)) {\n      localStorage.removeItem('token');\n      return false;\n    }\n    \n    try {\n      const decoded = jwtDecode(token);\n      const isExpired = decoded.exp * 1000 < Date.now();\n      if (isExpired) localStorage.removeItem('token');\n      return !isExpired;\n    } catch (e) {\n      console.error(\"Error decodificando token:\", e);\n      localStorage.removeItem('token');\n      return false;\n    }\n  }, [validateToken]);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n    setCursosComprados([]);\n  }, []);\n\n  const fetchUserData = useCallback(async (token) => {\n    if (!validateToken(token)) {\n      throw new Error('Token de autenticación inválido');\n    }\n\n    try {\n      const decoded = jwtDecode(token);\n      \n      const userResponse = await fetch('/api/auth/me', {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n\n      if (!userResponse.ok) {\n        throw new Error(userResponse.status === 401 ? 'Sesión expirada' : 'Error al obtener datos del usuario');\n      }\n\n      const userData = await userResponse.json();\n      const updatedUser = {\n        id: decoded.user_id,\n        email: userData.email,\n        nombre: userData.nombre,\n        role: userData.role\n      };\n      setUser(updatedUser);\n\n      // Solo obtener cursos si es estudiante\n      if (updatedUser.role === 'estudiante') {\n        const cursosResponse = await fetch('/api/pagos/mis-cursos', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        });\n        \n        if (cursosResponse.ok) {\n          setCursosComprados(await cursosResponse.json());\n        }\n      } else {\n        setCursosComprados([]);\n      }\n\n      return updatedUser;\n    } catch (error) {\n      console.error(\"Error obteniendo datos:\", error);\n      throw error;\n    }\n  }, [validateToken]);\n\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      setLoading(true);\n      const authenticated = isAuthenticated();\n      setIsLoggedIn(authenticated);\n\n      if (authenticated) {\n        const token = localStorage.getItem('token');\n        await fetchUserData(token);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error(\"Error verificando autenticación:\", error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, fetchUserData, logout]);\n\n  const login = useCallback(async (token) => {\n    if (!validateToken(token)) {\n      throw new Error('El token proporcionado no es válido');\n    }\n\n    try {\n      localStorage.setItem('token', token);\n      const userData = await fetchUserData(token);\n      setIsLoggedIn(true);\n      return userData;\n    } catch (error) {\n      console.error(\"Error en login:\", error);\n      logout();\n      throw error;\n    }\n  }, [fetchUserData, logout, validateToken]);\n\n  const verificarAccesoCurso = useCallback(async (cursoId) => {\n    if (!isLoggedIn) return { tieneAcceso: false, mensaje: 'Debes iniciar sesión' };\n    \n    try {\n      const token = localStorage.getItem('token');\n      if (!validateToken(token)) {\n        logout();\n        return { tieneAcceso: false, mensaje: 'Sesión inválida' };\n      }\n\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      \n      if (response.status === 401) {\n        logout();\n        return { tieneAcceso: false, mensaje: 'Sesión expirada' };\n      }\n      \n      if (!response.ok) {\n        return { \n          tieneAcceso: false, \n          mensaje: (await response.json()).error || 'Error al verificar acceso' \n        };\n      }\n      \n      return { tieneAcceso: (await response.json()).tiene_acceso, mensaje: '' };\n    } catch (error) {\n      console.error(\"Error verificando acceso:\", error);\n      return { tieneAcceso: false, mensaje: 'Error de conexión' };\n    }\n  }, [isLoggedIn, logout, validateToken]);\n\n  const procesarPago = useCallback(async (cursoId) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!validateToken(token)) {\n        logout();\n        throw new Error('Sesión inválida');\n      }\n\n      const response = await fetch('/api/payments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ curso_id: cursoId })\n      });\n      \n      if (response.status === 401) {\n        logout();\n        throw new Error('Sesión expirada');\n      }\n      \n      if (!response.ok) {\n        throw new Error((await response.json()).error || 'Error al procesar pago');\n      }\n      \n      const data = await response.json();\n      \n      if (data.token) {\n        await login(data.token);\n      } else {\n        await checkAuthStatus();\n      }\n      \n      return data;\n    } catch (error) {\n      console.error(\"Error en pago:\", error);\n      throw error;\n    }\n  }, [checkAuthStatus, login, logout, validateToken]);\n\n  // Efecto para verificación periódica\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isLoggedIn) checkAuthStatus();\n    }, 5 * 60 * 1000); // 5 minutos\n\n    // Verificación inicial\n    checkAuthStatus();\n    \n    return () => clearInterval(interval);\n  }, [checkAuthStatus, isLoggedIn]);\n\n  const value = {\n    isLoggedIn,\n    loading,\n    user,\n    cursosComprados,\n    login,\n    logout,\n    verificarAccesoCurso,\n    procesarPago,\n    checkAuthStatus\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}