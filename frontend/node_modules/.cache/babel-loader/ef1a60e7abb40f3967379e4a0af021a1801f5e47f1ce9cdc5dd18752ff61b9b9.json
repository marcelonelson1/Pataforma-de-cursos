{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [cursosComprados, setCursosComprados] = useState([]);\n\n  // Token validation function\n  const isTokenValid = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp * 1000 > Date.now();\n    } catch (e) {\n      return false;\n    }\n  }, []);\n\n  // Fetch user data\n  const fetchUserData = useCallback(async token => {\n    try {\n      const userResponse = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!userResponse.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      const userData = await userResponse.json();\n      return userData.data;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  }, []);\n\n  // Fetch user courses\n  const fetchUserCourses = useCallback(async (token, userRole) => {\n    if (userRole !== 'estudiante') return [];\n    try {\n      const cursosResponse = await fetch('http://localhost:5000/api/payments/mis-cursos', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!cursosResponse.ok) {\n        throw new Error('Failed to fetch user courses');\n      }\n      const cursosData = await cursosResponse.json();\n      return cursosData.data || [];\n    } catch (error) {\n      console.error('Error fetching user courses:', error);\n      return [];\n    }\n  }, []);\n\n  // Restore session\n  const restoreSession = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    if (token && isTokenValid()) {\n      try {\n        const userData = await fetchUserData(token);\n        if (userData) {\n          setUser({\n            id: userData.id,\n            email: userData.email,\n            nombre: userData.nombre,\n            role: userData.role\n          });\n          const userCourses = await fetchUserCourses(token, userData.role);\n          setCursosComprados(userCourses);\n          setIsLoggedIn(true);\n        } else {\n          logout();\n        }\n      } catch (error) {\n        console.error('Session restoration failed:', error);\n        logout();\n      }\n    } else {\n      logout();\n    }\n    setLoading(false);\n  }, [isTokenValid, fetchUserData, fetchUserCourses]);\n\n  // Login function\n  const login = useCallback(token => {\n    localStorage.setItem('token', token);\n    window.dispatchEvent(new Event('loginSuccess'));\n    restoreSession();\n  }, [restoreSession]);\n\n  // Logout function\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n    setCursosComprados([]);\n    window.dispatchEvent(new Event('logoutSuccess'));\n  }, []);\n\n  // Verify course access\n  const verificarAccesoCurso = useCallback(async cursoId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return {\n        tieneAcceso: false,\n        mensaje: 'No has iniciado sesión'\n      };\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.status === 403) {\n        return {\n          tieneAcceso: false,\n          mensaje: 'No tienes acceso a este curso'\n        };\n      }\n      if (!response.ok) {\n        return {\n          tieneAcceso: false,\n          mensaje: 'Error al verificar acceso'\n        };\n      }\n      const data = await response.json();\n      return {\n        tieneAcceso: data.tiene_acceso,\n        mensaje: ''\n      };\n    } catch (error) {\n      return {\n        tieneAcceso: false,\n        mensaje: 'Error de conexión'\n      };\n    }\n  }, []);\n\n  // Process payment\n  const procesarPago = useCallback(async cursoId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No has iniciado sesión');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/payments/create-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          curso_id: cursoId\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Error al procesar pago');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }, []);\n\n  // Restore session and handle storage events\n  useEffect(() => {\n    // Initial auth status check\n    restoreSession();\n\n    // Handle storage changes (cross-tab sync)\n    const handleStorageChange = event => {\n      if (event.key === 'token') {\n        restoreSession();\n      }\n    };\n\n    // Listen for events across tabs\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('loginSuccess', restoreSession);\n    window.addEventListener('logoutSuccess', restoreSession);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('loginSuccess', restoreSession);\n      window.removeEventListener('logoutSuccess', restoreSession);\n    };\n  }, [restoreSession]);\n\n  // Provide context value\n  const value = {\n    isLoggedIn,\n    loading,\n    user,\n    cursosComprados,\n    login,\n    logout,\n    verificarAccesoCurso,\n    procesarPago\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use AuthContext\n_s(AuthProvider, \"in27otrtNLCMLxhHYJsxqcDxd08=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","loading","setLoading","user","setUser","cursosComprados","setCursosComprados","isTokenValid","token","localStorage","getItem","decoded","exp","Date","now","e","fetchUserData","userResponse","fetch","headers","ok","Error","userData","json","data","error","console","fetchUserCourses","userRole","cursosResponse","cursosData","restoreSession","id","email","nombre","role","userCourses","logout","login","setItem","window","dispatchEvent","Event","removeItem","verificarAccesoCurso","cursoId","tieneAcceso","mensaje","response","status","tiene_acceso","procesarPago","method","body","JSON","stringify","curso_id","errorData","handleStorageChange","event","key","addEventListener","removeEventListener","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [cursosComprados, setCursosComprados] = useState([]);\n\n  // Token validation function\n  const isTokenValid = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    \n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp * 1000 > Date.now();\n    } catch (e) {\n      return false;\n    }\n  }, []);\n\n  // Fetch user data\n  const fetchUserData = useCallback(async (token) => {\n    try {\n      const userResponse = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (!userResponse.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n\n      const userData = await userResponse.json();\n      return userData.data;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  }, []);\n\n  // Fetch user courses\n  const fetchUserCourses = useCallback(async (token, userRole) => {\n    if (userRole !== 'estudiante') return [];\n\n    try {\n      const cursosResponse = await fetch('http://localhost:5000/api/payments/mis-cursos', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (!cursosResponse.ok) {\n        throw new Error('Failed to fetch user courses');\n      }\n\n      const cursosData = await cursosResponse.json();\n      return cursosData.data || [];\n    } catch (error) {\n      console.error('Error fetching user courses:', error);\n      return [];\n    }\n  }, []);\n\n  // Restore session\n  const restoreSession = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    \n    if (token && isTokenValid()) {\n      try {\n        const userData = await fetchUserData(token);\n        \n        if (userData) {\n          setUser({\n            id: userData.id,\n            email: userData.email,\n            nombre: userData.nombre,\n            role: userData.role\n          });\n\n          const userCourses = await fetchUserCourses(token, userData.role);\n          setCursosComprados(userCourses);\n          \n          setIsLoggedIn(true);\n        } else {\n          logout();\n        }\n      } catch (error) {\n        console.error('Session restoration failed:', error);\n        logout();\n      }\n    } else {\n      logout();\n    }\n    \n    setLoading(false);\n  }, [isTokenValid, fetchUserData, fetchUserCourses]);\n\n  // Login function\n  const login = useCallback((token) => {\n    localStorage.setItem('token', token);\n    window.dispatchEvent(new Event('loginSuccess'));\n    restoreSession();\n  }, [restoreSession]);\n\n  // Logout function\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n    setCursosComprados([]);\n    window.dispatchEvent(new Event('logoutSuccess'));\n  }, []);\n\n  // Verify course access\n  const verificarAccesoCurso = useCallback(async (cursoId) => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      return { tieneAcceso: false, mensaje: 'No has iniciado sesión' };\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (response.status === 403) {\n        return { tieneAcceso: false, mensaje: 'No tienes acceso a este curso' };\n      }\n      \n      if (!response.ok) {\n        return { tieneAcceso: false, mensaje: 'Error al verificar acceso' };\n      }\n      \n      const data = await response.json();\n      return { tieneAcceso: data.tiene_acceso, mensaje: '' };\n    } catch (error) {\n      return { tieneAcceso: false, mensaje: 'Error de conexión' };\n    }\n  }, []);\n\n  // Process payment\n  const procesarPago = useCallback(async (cursoId) => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      throw new Error('No has iniciado sesión');\n    }\n\n    try {\n      const response = await fetch('http://localhost:5000/api/payments/create-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ curso_id: cursoId })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Error al procesar pago');\n      }\n      \n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }, []);\n\n  // Restore session and handle storage events\n  useEffect(() => {\n    // Initial auth status check\n    restoreSession();\n    \n    // Handle storage changes (cross-tab sync)\n    const handleStorageChange = (event) => {\n      if (event.key === 'token') {\n        restoreSession();\n      }\n    };\n\n    // Listen for events across tabs\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('loginSuccess', restoreSession);\n    window.addEventListener('logoutSuccess', restoreSession);\n    \n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('loginSuccess', restoreSession);\n      window.removeEventListener('logoutSuccess', restoreSession);\n    };\n  }, [restoreSession]);\n\n  // Provide context value\n  const value = {\n    isLoggedIn,\n    loading,\n    user,\n    cursosComprados,\n    login,\n    logout,\n    verificarAccesoCurso,\n    procesarPago\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use AuthContext\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}