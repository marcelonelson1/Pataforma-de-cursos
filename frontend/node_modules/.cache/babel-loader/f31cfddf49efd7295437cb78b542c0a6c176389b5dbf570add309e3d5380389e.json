{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Proveedor de autenticación\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Verificar autenticación al cargar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Aquí puedes agregar una verificación del token con tu backend\n          // const response = await verifyToken(token);\n          setIsAuthenticated(true);\n          const userData = JSON.parse(localStorage.getItem('user'));\n          setUser(userData);\n        } catch (error) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Función para login\n  const login = async (token, userData) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n    setIsAuthenticated(true);\n    navigate('/');\n  };\n\n  // Función para logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  // Valores proporcionados por el contexto\n  const authValues = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authValues,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar el contexto\n_s(AuthProvider, \"DZ43dVOC6ATcOj/spkf7xa39n3k=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","navigate","checkAuth","token","localStorage","getItem","userData","JSON","parse","error","removeItem","login","setItem","stringify","logout","authValues","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Crear el contexto\nconst AuthContext = createContext();\n\n// Proveedor de autenticación\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Verificar autenticación al cargar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Aquí puedes agregar una verificación del token con tu backend\n          // const response = await verifyToken(token);\n          setIsAuthenticated(true);\n          const userData = JSON.parse(localStorage.getItem('user'));\n          setUser(userData);\n        } catch (error) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  // Función para login\n  const login = async (token, userData) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n    setIsAuthenticated(true);\n    navigate('/');\n  };\n\n  // Función para logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  // Valores proporcionados por el contexto\n  const authValues = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={authValues}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}