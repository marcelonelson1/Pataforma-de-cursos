{"ast":null,"code":"var _jsxFileName = \"/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [cursosComprados, setCursosComprados] = useState([]);\n  const isAuthenticated = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp * 1000 > Date.now();\n    } catch (e) {\n      return false;\n    }\n  }, []);\n  const checkAuthStatus = useCallback(async () => {\n    const authenticated = isAuthenticated();\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(authenticated);\n    if (authenticated && token) {\n      try {\n        const decoded = jwtDecode(token);\n\n        // Obtener información actualizada del usuario\n        const userResponse = await fetch('/api/auth/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          setUser({\n            id: decoded.user_id,\n            email: userData.email,\n            nombre: userData.nombre,\n            role: userData.role\n          });\n\n          // Solo obtener cursos si el usuario es estudiante\n          if (userData.role === 'estudiante') {\n            const cursosResponse = await fetch('/api/pagos/mis-cursos', {\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            });\n            if (cursosResponse.ok) {\n              const cursosData = await cursosResponse.json();\n              setCursosComprados(cursosData);\n            }\n          } else {\n            setCursosComprados([]);\n          }\n        }\n      } catch (e) {\n        console.error(\"Error obteniendo datos de usuario:\", e);\n      }\n    } else {\n      setUser(null);\n      setCursosComprados([]);\n    }\n    setLoading(false);\n  }, [isAuthenticated]);\n  const login = useCallback(token => {\n    localStorage.setItem('token', token);\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n  const verificarAccesoCurso = useCallback(async cursoId => {\n    try {\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.status === 403) {\n        return {\n          tieneAcceso: false,\n          mensaje: 'No tienes acceso a este curso'\n        };\n      }\n      if (!response.ok) {\n        return {\n          tieneAcceso: false,\n          mensaje: 'Error al verificar acceso'\n        };\n      }\n      const data = await response.json();\n      return {\n        tieneAcceso: data.tiene_acceso,\n        mensaje: ''\n      };\n    } catch (error) {\n      return {\n        tieneAcceso: false,\n        mensaje: 'Error de conexión'\n      };\n    }\n  }, []);\n  const procesarPago = useCallback(async cursoId => {\n    try {\n      const response = await fetch('/api/pagos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          curso_id: cursoId\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Error al procesar pago');\n      }\n      const data = await response.json();\n\n      // Si se recibió un nuevo token, actualizarlo\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        await checkAuthStatus();\n      }\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }, [checkAuthStatus]);\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n  const value = {\n    isLoggedIn,\n    loading,\n    user,\n    cursosComprados,\n    login,\n    logout,\n    verificarAccesoCurso,\n    procesarPago\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"LCSZB7NkQOYUnDkSRbvHuyBufLk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","loading","setLoading","user","setUser","cursosComprados","setCursosComprados","isAuthenticated","token","localStorage","getItem","decoded","exp","Date","now","e","checkAuthStatus","authenticated","userResponse","fetch","headers","ok","userData","json","id","user_id","email","nombre","role","cursosResponse","cursosData","console","error","login","setItem","logout","removeItem","verificarAccesoCurso","cursoId","response","status","tieneAcceso","mensaje","data","tiene_acceso","procesarPago","method","body","JSON","stringify","curso_id","errorData","Error","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/home/kali/mi-primer-startup/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [cursosComprados, setCursosComprados] = useState([]);\n\n  const isAuthenticated = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    \n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp * 1000 > Date.now();\n    } catch (e) {\n      return false;\n    }\n  }, []);\n\n  const checkAuthStatus = useCallback(async () => {\n    const authenticated = isAuthenticated();\n    const token = localStorage.getItem('token');\n    \n    setIsLoggedIn(authenticated);\n    \n    if (authenticated && token) {\n      try {\n        const decoded = jwtDecode(token);\n        \n        // Obtener información actualizada del usuario\n        const userResponse = await fetch('/api/auth/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          setUser({\n            id: decoded.user_id,\n            email: userData.email,\n            nombre: userData.nombre,\n            role: userData.role\n          });\n\n          // Solo obtener cursos si el usuario es estudiante\n          if (userData.role === 'estudiante') {\n            const cursosResponse = await fetch('/api/pagos/mis-cursos', {\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            });\n            \n            if (cursosResponse.ok) {\n              const cursosData = await cursosResponse.json();\n              setCursosComprados(cursosData);\n            }\n          } else {\n            setCursosComprados([]);\n          }\n        }\n      } catch (e) {\n        console.error(\"Error obteniendo datos de usuario:\", e);\n      }\n    } else {\n      setUser(null);\n      setCursosComprados([]);\n    }\n    \n    setLoading(false);\n  }, [isAuthenticated]);\n\n  const login = useCallback((token) => {\n    localStorage.setItem('token', token);\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  const verificarAccesoCurso = useCallback(async (cursoId) => {\n    try {\n      const response = await fetch(`/api/cursos/${cursoId}/verificar-acceso`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      \n      if (response.status === 403) {\n        return { tieneAcceso: false, mensaje: 'No tienes acceso a este curso' };\n      }\n      \n      if (!response.ok) {\n        return { tieneAcceso: false, mensaje: 'Error al verificar acceso' };\n      }\n      \n      const data = await response.json();\n      return { tieneAcceso: data.tiene_acceso, mensaje: '' };\n    } catch (error) {\n      return { tieneAcceso: false, mensaje: 'Error de conexión' };\n    }\n  }, []);\n\n  const procesarPago = useCallback(async (cursoId) => {\n    try {\n      const response = await fetch('/api/pagos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({ curso_id: cursoId })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Error al procesar pago');\n      }\n      \n      const data = await response.json();\n      \n      // Si se recibió un nuevo token, actualizarlo\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        await checkAuthStatus();\n      }\n      \n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }, [checkAuthStatus]);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  const value = {\n    isLoggedIn,\n    loading,\n    user,\n    cursosComprados,\n    login,\n    logout,\n    verificarAccesoCurso,\n    procesarPago\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}